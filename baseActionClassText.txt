 public with sharing  class FormToFlow_MapCreateContact {
 
    @InvocableMethod
    public static List <Result> process(List<Request> requestList) {

        List<Result> responseWrapper = new List<Result>();

        for (Request curRequest : requestList) {
            Result response = new Result();
            //Map<String, Map<String, String>> extractedFormDataMap = EinsteinFormReader.processform(curRequest.formTemplateId, curRequest.uploadedFileText);
            Map<String, Map<String, String>> extractedFormDataAll = new Map<String, Map<String, String>>();
            Map<String, String> extractedFormDataMap = FormToFlowUtils.ExtractKeyValuePairs(extractedFormDataAll);
            response.outputFormData=Convert(extractedFormDataMap);
            responseWrapper.add(response);
        }
        return responseWrapper;
    }

    public class Request {

        @InvocableVariable(required=true)
        public String uploadedFileText;

        @InvocableVariable(required=true)
        public String formTemplateId;
        
    }

    public class Result {

        @InvocableVariable(required=false)
        public  FormType_CreateContact outputFormData;
    }

    public static FormType_CreateContact Convert(Map<String, String> extractedFormDataMap) {
        return  (FormType_CreateContact)JSON.deserialize(JSON.serialize(extractedFormDataMap),FormType_CreateContact.class);
    }
} 